<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Cloud.PubSub.V1</name>
    </assembly>
    <members>
        <member name="T:Google.Cloud.PubSub.V1.PublisherSettings">
            <summary>
            Settings for a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.GetDefault">
            <summary>
            Get a new instance of the default <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/>.
            </summary>
            <returns>
            A new instance of the default <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.#ctor">
            <summary>
            Constructs a new <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/> object with default settings.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.IdempotentRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "Idempotent" <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "Idempotent" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.OnePlusDeliveryRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "OnePlusDelivery" <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "OnePlusDelivery" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.Cancelled"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unknown"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Aborted"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Internal"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.NonIdempotentRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "NonIdempotent" <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "NonIdempotent" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.GetDefaultRetryBackoff">
            <summary>
            "Default" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <returns>
            The "Default" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </returns>
            <remarks>
            The "Default" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial delay: 100 milliseconds</description></item>
            <item><description>Maximum delay: 60000 milliseconds</description></item>
            <item><description>Delay multiplier: 1.3</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.GetDefaultTimeoutBackoff">
            <summary>
            "Default" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <returns>
            The "Default" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </returns>
            <remarks>
            The "Default" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Maximum timeout: 60000 milliseconds</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.GetMessagingRetryBackoff">
            <summary>
            "Messaging" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <returns>
            The "Messaging" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </returns>
            <remarks>
            The "Messaging" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial delay: 100 milliseconds</description></item>
            <item><description>Maximum delay: 60000 milliseconds</description></item>
            <item><description>Delay multiplier: 1.3</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.GetMessagingTimeoutBackoff">
            <summary>
            "Messaging" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </summary>
            <returns>
            The "Messaging" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods.
            </returns>
            <remarks>
            The "Messaging" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial timeout: 12000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Maximum timeout: 12000 milliseconds</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.CreateTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.CreateTopic</c> and <c>PublisherClient.CreateTopicAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.CreateTopic</c> and
            <c>PublisherClient.CreateTopicAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.PublishSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.Publish</c> and <c>PublisherClient.PublishAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.Publish</c> and
            <c>PublisherClient.PublishAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 12000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 12000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Cancelled"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unknown"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Aborted"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Internal"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.GetTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.GetTopic</c> and <c>PublisherClient.GetTopicAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.GetTopic</c> and
            <c>PublisherClient.GetTopicAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.ListTopicsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.ListTopics</c> and <c>PublisherClient.ListTopicsAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.ListTopics</c> and
            <c>PublisherClient.ListTopicsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.ListTopicSubscriptionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.ListTopicSubscriptions</c> and <c>PublisherClient.ListTopicSubscriptionsAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.ListTopicSubscriptions</c> and
            <c>PublisherClient.ListTopicSubscriptionsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.DeleteTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.DeleteTopic</c> and <c>PublisherClient.DeleteTopicAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.DeleteTopic</c> and
            <c>PublisherClient.DeleteTopicAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.SetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.SetIamPolicy</c> and <c>PublisherClient.SetIamPolicyAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.SetIamPolicy</c> and
            <c>PublisherClient.SetIamPolicyAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.GetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.GetIamPolicy</c> and <c>PublisherClient.GetIamPolicyAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.GetIamPolicy</c> and
            <c>PublisherClient.GetIamPolicyAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherSettings.TestIamPermissionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherClient.TestIamPermissions</c> and <c>PublisherClient.TestIamPermissionsAsync</c>.
            </summary>
            <remarks>
            The default <c>PublisherClient.TestIamPermissions</c> and
            <c>PublisherClient.TestIamPermissionsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherSettings.Clone">
            <summary>
            Creates a deep clone of this object, with all the same property values.
            </summary>
            <returns>A deep clone of this <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/> object.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClient">
            <summary>
            Publisher client wrapper, for convenient use.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.DefaultEndpoint">
            <summary>
            The default endpoint for the Publisher service, which is a host of "pubsub.googleapis.com" and a port of 443.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.DefaultScopes">
            <summary>
            The default Publisher scopes.
            </summary>
            <remarks>
            The default Publisher scopes are:
            <list type="bullet">
            <item><description>"https://www.googleapis.com/auth/cloud-platform"</description></item>
            <item><description>"https://www.googleapis.com/auth/pubsub"</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.PublisherSettings)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>, applying defaults for all unspecified settings,
            and creating a channel connecting to the given endpoint with application default credentials where
            necessary.
            </summary>
            <param name="endpoint">Optional <see cref="T:Google.Api.Gax.Grpc.ServiceEndpoint"/>.</param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/>.</param>
            <returns>The task representing the created <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.PublisherSettings)">
            <summary>
            Synchronously creates a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>, applying defaults for all unspecified settings,
            and creating a channel connecting to the given endpoint with application default credentials where
            necessary.
            </summary>
            <param name="endpoint">Optional <see cref="T:Google.Api.Gax.Grpc.ServiceEndpoint"/>.</param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Create(Grpc.Core.Channel,Google.Cloud.PubSub.V1.PublisherSettings)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> which uses the specified channel for remote operations.
            </summary>
            <param name="channel">The <see cref="T:Grpc.Core.Channel"/> for remote operations. Must not be null.</param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Cloud.PubSub.V1.PublisherClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.PublisherSettings)"/>
            and <see cref="M:Google.Cloud.PubSub.V1.PublisherClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.PublisherSettings)"/>. Channels which weren't automatically
            created are not affected.
            </summary>
            <remarks>After calling this method, further calls to <see cref="M:Google.Cloud.PubSub.V1.PublisherClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.PublisherSettings)"/>
            and <see cref="M:Google.Cloud.PubSub.V1.PublisherClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.PublisherSettings)"/> will create new channels, which could
            in turn be shut down by another call to this method.</remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.GrpcClient">
            <summary>
            The underlying gRPC Publisher client.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="name">
            The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.TopicName,System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="name">
            The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateTopic(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="name">
            The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateTopic(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="topic">
            The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            The messages to publish.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="topic">
            The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            The messages to publish.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Publish(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="topic">
            The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            The messages to publish.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Publish(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.TopicName,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetTopic(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="project">
            The name of the cloud project that topics belong to.
            Format is `projects/{project}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopics(Google.Cloud.PubSub.V1.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="project">
            The name of the cloud project that topics belong to.
            Format is `projects/{project}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.TopicName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="topic">
            The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:System.String"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.TopicName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="topic">
            The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:System.String"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:System.String"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:System.String"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.TopicName,System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.DeleteTopic(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="policy">
            REQUIRED: The complete policy to be applied to the `resource`. The size of
            the policy is limited to a few 10s of KB. An empty policy is a
            valid policy but certain Cloud Platform services (such as Projects)
            might reject them.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,System.Threading.CancellationToken)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="policy">
            REQUIRED: The complete policy to be applied to the `resource`. The size of
            the policy is limited to a few 10s of KB. An empty policy is a
            valid policy but certain Cloud Platform services (such as Projects)
            might reject them.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.SetIamPolicy(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="policy">
            REQUIRED: The complete policy to be applied to the `resource`. The size of
            the policy is limited to a few 10s of KB. An empty policy is a
            valid policy but certain Cloud Platform services (such as Projects)
            might reject them.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetIamPolicyAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetIamPolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetIamPolicy(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy detail is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="permissions">
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy detail is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="permissions">
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.TestIamPermissions(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy detail is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="permissions">
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClientImpl">
            <summary>
            Publisher client wrapper implementation, for convenient use.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.#ctor(Google.Cloud.PubSub.V1.Publisher.PublisherClient,Google.Cloud.PubSub.V1.PublisherSettings)">
            <summary>
            Constructs a client wrapper for the Publisher service, with the specified gRPC client and settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Cloud.PubSub.V1.PublisherSettings"/> used within this client </param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClientImpl.GrpcClient">
            <summary>
            The underlying gRPC Publisher client.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.CreateTopic(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.Publish(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:System.String"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:System.String"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicsRequest">
            <summary>
            Request for the `ListTopics` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.Project">
            <summary>
            The name of the cloud project that topics belong to.
            Format is `projects/{project}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.PageSize">
            <summary>
            Maximum number of topics to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.PageToken">
            <summary>
            The value returned by the last `ListTopicsResponse`; indicates that this is
            a continuation of a prior `ListTopics` call, and that the system should
            return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.ProjectAsProjectName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListTopicsRequest.Project"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicsResponse">
            <summary>
            Response for the `ListTopics` method.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicsResponse.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the resources in this response.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicsResponse.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsResponse.TopicsFieldNumber">
            <summary>Field number for the "topics" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsResponse.Topics">
            <summary>
            The resulting topics.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more topics that match the
            request; this value should be passed in a new `ListTopicsRequest`.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest">
            <summary>
            Request for the `ListTopicSubscriptions` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.Topic">
            <summary>
            The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageSize">
            <summary>
            Maximum number of subscription names to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageToken">
            <summary>
            The value returned by the last `ListTopicSubscriptionsResponse`; indicates
            that this is a continuation of a prior `ListTopicSubscriptions` call, and
            that the system should return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.TopicAsTopicName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.Topic"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse">
            <summary>
            Response for the `ListTopicSubscriptions` method.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the resources in this response.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.SubscriptionsFieldNumber">
            <summary>Field number for the "subscriptions" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.Subscriptions">
            <summary>
            The names of the subscriptions that match the request.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more subscriptions that match
            the request; this value should be passed in a new
            `ListTopicSubscriptionsRequest` to get more subscriptions.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.SubscriptionsAsSubscriptionNames">
            <summary>
            <see cref="T:Google.Api.Gax.ResourceNameList`1"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.Subscriptions"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PubsubReflection">
            <summary>Holder for reflection information generated from google/pubsub/v1/pubsub.proto</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubReflection.Descriptor">
            <summary>File descriptor for google/pubsub/v1/pubsub.proto</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Topic">
            <summary>
            A topic resource.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Topic.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.Name">
            <summary>
            The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.TopicName">
            <summary>
            <see cref="P:Google.Cloud.PubSub.V1.Topic.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Topic.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PubsubMessage">
            <summary>
            A message data and its attributes. The message payload must not be empty;
            it must contain either a non-empty data field, or at least one attribute.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.Data">
            <summary>
            The message payload.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.Attributes">
            <summary>
            Optional attributes for this message.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.MessageIdFieldNumber">
            <summary>Field number for the "message_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.MessageId">
            <summary>
            ID of this message, assigned by the server when the message is published.
            Guaranteed to be unique within the topic. This value may be read by a
            subscriber that receives a `PubsubMessage` via a `Pull` call or a push
            delivery. It must not be populated by the publisher in a `Publish` call.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.PublishTimeFieldNumber">
            <summary>Field number for the "publish_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.PublishTime">
            <summary>
            The time at which the message was published, populated by the server when
            it receives the `Publish` call. It must not be populated by the
            publisher in a `Publish` call.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.GetTopicRequest">
            <summary>
            Request for the GetTopic method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.GetTopicRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetTopicRequest.Topic">
            <summary>
            The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetTopicRequest.TopicAsTopicName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.GetTopicRequest.Topic"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublishRequest">
            <summary>
            Request for the Publish method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublishRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishRequest.Topic">
            <summary>
            The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublishRequest.MessagesFieldNumber">
            <summary>Field number for the "messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishRequest.Messages">
            <summary>
            The messages to publish.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishRequest.TopicAsTopicName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.PublishRequest.Topic"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublishResponse">
            <summary>
            Response for the `Publish` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublishResponse.MessageIdsFieldNumber">
            <summary>Field number for the "message_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishResponse.MessageIds">
            <summary>
            The server-assigned ID of each published message, in the same order as
            the messages in the request. IDs are guaranteed to be unique within
            the topic.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeleteTopicRequest">
            <summary>
            Request for the `DeleteTopic` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeleteTopicRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteTopicRequest.Topic">
            <summary>
            Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteTopicRequest.TopicAsTopicName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.DeleteTopicRequest.Topic"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscription">
            <summary>
            A subscription resource.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.Name">
            <summary>
            The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.Topic">
            <summary>
            The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.PushConfigFieldNumber">
            <summary>Field number for the "push_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.PushConfig">
            <summary>
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.AckDeadlineSecondsFieldNumber">
            <summary>Field number for the "ack_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.AckDeadlineSeconds">
             <summary>
             This value is the maximum time after a subscriber receives a message
             before the subscriber should acknowledge the message. After message
             delivery but before the ack deadline expires and before the message is
             acknowledged, it is an outstanding message and will not be delivered
             again during that time (on a best-effort basis).
            
             For pull subscriptions, this value is used as the initial value for the ack
             deadline. To override this value for a given message, call
             `ModifyAckDeadline` with the corresponding `ack_id` if using
             pull.
             The minimum custom deadline you can specify is 10 seconds.
             The maximum custom deadline you can specify is 600 seconds (10 minutes).
             If this parameter is 0, a default value of 10 seconds is used.
            
             For push delivery, this value is also used to set the request timeout for
             the call to the push endpoint.
            
             If the subscriber never acknowledges the message, the Pub/Sub
             system will eventually redeliver the message.
             </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.RetainAckedMessagesFieldNumber">
            <summary>Field number for the "retain_acked_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.RetainAckedMessages">
            <summary>
            Indicates whether to retain acknowledged messages. If true, then
            messages are not expunged from the subscription's backlog, even if they are
            acknowledged, until they fall out of the `message_retention_duration`
            window.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.MessageRetentionDurationFieldNumber">
            <summary>Field number for the "message_retention_duration" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.MessageRetentionDuration">
            <summary>
            How long to retain unacknowledged messages in the subscription's backlog,
            from the moment a message is published.
            If `retain_acked_messages` is true, then this also configures the retention
            of acknowledged messages, and thus configures how far back in time a `Seek`
            can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10
            minutes.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.SubscriptionName">
            <summary>
            <see cref="P:Google.Cloud.PubSub.V1.Subscription.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Subscription.Name"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.TopicAsTopicNameOneof">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Subscription.Topic"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PushConfig">
            <summary>
            Configuration for a push delivery endpoint.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.PushEndpointFieldNumber">
            <summary>Field number for the "push_endpoint" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.PushEndpoint">
            <summary>
            A URL locating the endpoint to which messages should be pushed.
            For example, a Webhook endpoint might use "https://example.com/push".
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.Attributes">
             <summary>
             Endpoint configuration attributes.
            
             Every endpoint has a set of API supported attributes that can be used to
             control different aspects of the message delivery.
            
             The currently supported attribute is `x-goog-version`, which you can
             use to change the format of the pushed message. This attribute
             indicates the version of the data expected by the endpoint. This
             controls the shape of the pushed message (i.e., its fields and metadata).
             The endpoint version is based on the version of the Pub/Sub API.
            
             If not present during the `CreateSubscription` call, it will default to
             the version of the API used to make such call. If not present during a
             `ModifyPushConfig` call, its value will not be changed. `GetSubscription`
             calls will always return a valid version, even if the subscription was
             created without this attribute.
            
             The possible values for this attribute are:
            
             * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
             * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.
             </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ReceivedMessage">
            <summary>
            A message and its corresponding acknowledgment ID.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ReceivedMessage.AckIdFieldNumber">
            <summary>Field number for the "ack_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ReceivedMessage.AckId">
            <summary>
            This ID can be used to acknowledge the received message.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ReceivedMessage.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ReceivedMessage.Message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.GetSubscriptionRequest">
            <summary>
            Request for the GetSubscription method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.GetSubscriptionRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetSubscriptionRequest.Subscription">
            <summary>
            The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetSubscriptionRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.GetSubscriptionRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest">
            <summary>
            Request for the UpdateSubscription method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.Subscription">
            <summary>
            The updated subscription object.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.UpdateMask">
            <summary>
            Indicates which fields in the provided subscription to update.
            Must be specified and non-empty.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSubscriptionsRequest">
            <summary>
            Request for the `ListSubscriptions` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.Project">
            <summary>
            The name of the cloud project that subscriptions belong to.
            Format is `projects/{project}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageSize">
            <summary>
            Maximum number of subscriptions to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageToken">
            <summary>
            The value returned by the last `ListSubscriptionsResponse`; indicates that
            this is a continuation of a prior `ListSubscriptions` call, and that the
            system should return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.ProjectAsProjectName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.Project"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSubscriptionsResponse">
            <summary>
            Response for the `ListSubscriptions` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.SubscriptionsFieldNumber">
            <summary>Field number for the "subscriptions" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.Subscriptions">
            <summary>
            The subscriptions that match the request.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more subscriptions that match
            the request; this value should be passed in a new
            `ListSubscriptionsRequest` to get more subscriptions.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the resources in this response.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest">
            <summary>
            Request for the DeleteSubscription method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.Subscription">
            <summary>
            The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ModifyPushConfigRequest">
            <summary>
            Request for the ModifyPushConfig method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.Subscription">
            <summary>
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.PushConfigFieldNumber">
            <summary>Field number for the "push_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.PushConfig">
             <summary>
             The push configuration for future deliveries.
            
             An empty `pushConfig` indicates that the Pub/Sub system should
             stop pushing messages from the given subscription and allow
             messages to be pulled and acknowledged - effectively pausing
             the subscription if `Pull` is not called.
             </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PullRequest">
            <summary>
            Request for the `Pull` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.Subscription">
            <summary>
            The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullRequest.ReturnImmediatelyFieldNumber">
            <summary>Field number for the "return_immediately" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.ReturnImmediately">
            <summary>
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages. The
            client may cancel the request if it does not wish to wait any longer for
            the response.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullRequest.MaxMessagesFieldNumber">
            <summary>Field number for the "max_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.MaxMessages">
            <summary>
            The maximum number of messages returned for this request. The Pub/Sub
            system may return fewer than the number specified.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.PullRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PullResponse">
            <summary>
            Response for the `Pull` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullResponse.ReceivedMessagesFieldNumber">
            <summary>Field number for the "received_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullResponse.ReceivedMessages">
            <summary>
            Received Pub/Sub messages. The Pub/Sub system will return zero messages if
            there are no more available in the backlog. The Pub/Sub system may return
            fewer than the `maxMessages` requested even if there are more messages
            available in the backlog.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest">
            <summary>
            Request for the ModifyAckDeadline method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.Subscription">
            <summary>
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckIdsFieldNumber">
            <summary>Field number for the "ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckIds">
            <summary>
            List of acknowledgment IDs.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckDeadlineSecondsFieldNumber">
            <summary>Field number for the "ack_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckDeadlineSeconds">
            <summary>
            The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero may immediately make the message available for
            another pull request.
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.AcknowledgeRequest">
            <summary>
            Request for the Acknowledge method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.AcknowledgeRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.Subscription">
            <summary>
            The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.AcknowledgeRequest.AckIdsFieldNumber">
            <summary>Field number for the "ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.AckIds">
            <summary>
            The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.StreamingPullRequest">
            <summary>
            Request for the `StreamingPull` streaming RPC method. This request is used to
            establish the initial stream as well as to stream acknowledgements and ack
            deadline modifications from the client to the server.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.Subscription">
            <summary>
            The subscription for which to initialize the new stream. This must be
            provided in the first request on the stream, and must not be set in
            subsequent requests from client to server.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.AckIdsFieldNumber">
            <summary>Field number for the "ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.AckIds">
            <summary>
            List of acknowledgement IDs for acknowledging previously received messages
            (received on this stream or a different stream). If an ack ID has expired,
            the corresponding message may be redelivered later. Acknowledging a message
            more than once will not result in an error. If the acknowledgement ID is
            malformed, the stream will be aborted with status `INVALID_ARGUMENT`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineSecondsFieldNumber">
            <summary>Field number for the "modify_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineSeconds">
            <summary>
            The list of new ack deadlines for the IDs listed in
            `modify_deadline_ack_ids`. The size of this list must be the same as the
            size of `modify_deadline_ack_ids`. If it differs the stream will be aborted
            with `INVALID_ARGUMENT`. Each element in this list is applied to the
            element in the same position in `modify_deadline_ack_ids`. The new ack
            deadline is with respect to the time this request was sent to the Pub/Sub
            system. Must be >= 0. For example, if the value is 10, the new ack deadline
            will expire 10 seconds after this request is received. If the value is 0,
            the message is immediately made available for another streaming or
            non-streaming pull request. If the value is &lt; 0 (an error), the stream will
            be aborted with status `INVALID_ARGUMENT`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineAckIdsFieldNumber">
            <summary>Field number for the "modify_deadline_ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineAckIds">
            <summary>
            List of acknowledgement IDs whose deadline will be modified based on the
            corresponding element in `modify_deadline_seconds`. This field can be used
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.StreamAckDeadlineSecondsFieldNumber">
            <summary>Field number for the "stream_ack_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.StreamAckDeadlineSeconds">
            <summary>
            The ack deadline to use for the stream. This must be provided in the
            first request on the stream, but it can also be updated on subsequent
            requests from client to server. The minimum deadline you can specify is 10
            seconds. The maximum deadline you can specify is 600 seconds (10 minutes).
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.StreamingPullRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.StreamingPullResponse">
            <summary>
            Response for the `StreamingPull` method. This response is used to stream
            messages from the server to the client.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullResponse.ReceivedMessagesFieldNumber">
            <summary>Field number for the "received_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullResponse.ReceivedMessages">
            <summary>
            Received Pub/Sub messages. This will not be empty.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.CreateSnapshotRequest">
            <summary>
            Request for the `CreateSnapshot` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.CreateSnapshotRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Name">
            <summary>
            Optional user-provided name for this snapshot.
            If the name is not provided in the request, the server will assign a random
            name for this snapshot on the same project as the subscription.
            Note that for REST API requests, you must specify a name.
            Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Subscription">
            <summary>
            The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
             (a) The existing backlog on the subscription. More precisely, this is
                 defined as the messages in the subscription's backlog that are
                 unacknowledged upon the successful completion of the
                 `CreateSnapshot` request; as well as:
             (b) Any messages published to the subscription's topic following the
                 successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SnapshotName">
            <summary>
            <see cref="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Snapshot">
            <summary>
            A snapshot resource.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.Name">
            <summary>
            The name of the snapshot.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.Topic">
            <summary>
            The name of the topic from which this snapshot is retaining messages.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.ExpirationTimeFieldNumber">
            <summary>Field number for the "expiration_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.ExpirationTime">
            <summary>
            The snapshot is guaranteed to exist up until this time.
            A newly-created snapshot expires no later than 7 days from the time of its
            creation. Its exact lifetime is determined at creation by the existing
            backlog in the source subscription. Specifically, the lifetime of the
            snapshot is `7 days - (age of oldest unacked message in the subscription)`.
            For example, consider a subscription whose oldest unacked message is 3 days
            old. If a snapshot is created from this subscription, the snapshot -- which
            will always capture this 3-day-old backlog as long as the snapshot
            exists -- will expire in 4 days.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.SnapshotName">
            <summary>
            <see cref="P:Google.Cloud.PubSub.V1.Snapshot.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Snapshot.Name"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.TopicAsTopicName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Snapshot.Topic"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSnapshotsRequest">
            <summary>
            Request for the `ListSnapshots` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.Project">
            <summary>
            The name of the cloud project that snapshots belong to.
            Format is `projects/{project}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageSize">
            <summary>
            Maximum number of snapshots to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageToken">
            <summary>
            The value returned by the last `ListSnapshotsResponse`; indicates that this
            is a continuation of a prior `ListSnapshots` call, and that the system
            should return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.ProjectAsProjectName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.Project"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSnapshotsResponse">
            <summary>
            Response for the `ListSnapshots` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsResponse.SnapshotsFieldNumber">
            <summary>Field number for the "snapshots" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsResponse.Snapshots">
            <summary>
            The resulting snapshots.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more snapshot that match the
            request; this value should be passed in a new `ListSnapshotsRequest`.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListSnapshotsResponse.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the resources in this response.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListSnapshotsResponse.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeleteSnapshotRequest">
            <summary>
            Request for the `DeleteSnapshot` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.SnapshotFieldNumber">
            <summary>Field number for the "snapshot" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.Snapshot">
            <summary>
            The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.SnapshotAsSnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.Snapshot"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SeekRequest">
            <summary>
            Request for the `Seek` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SeekRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.Subscription">
            <summary>
            The subscription to affect.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SeekRequest.TimeFieldNumber">
            <summary>Field number for the "time" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.Time">
            <summary>
            The time to seek to.
            Messages retained in the subscription that were published before this
            time are marked as acknowledged, and messages retained in the
            subscription that were published after this time are marked as
            unacknowledged. Note that this operation affects only those messages
            retained in the subscription (configured by the combination of
            `message_retention_duration` and `retain_acked_messages`). For example,
            if `time` corresponds to a point before the message retention
            window (or to a point before the system's notion of the subscription
            creation time), only retained messages will be marked as unacknowledged,
            and already-expunged messages will not be restored.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SeekRequest.SnapshotFieldNumber">
            <summary>Field number for the "snapshot" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.Snapshot">
            <summary>
            The snapshot to seek to. The snapshot's topic must be the same as that of
            the provided subscription.
            Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SeekRequest.TargetOneofCase">
            <summary>Enum of possible cases for the "target" oneof.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.SeekRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.SnapshotAsSnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.SeekRequest.Snapshot"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscriber">
            <summary>
            The service that an application uses to manipulate subscriptions and to
            consume messages from a subscription via the `Pull` method.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscriber.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase">
            <summary>Base class for server-side implementations of Subscriber</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.ServerCallContext)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.Pull(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.StreamingPull(Grpc.Core.IAsyncStreamReader{Google.Cloud.PubSub.V1.StreamingPullRequest},Grpc.Core.IServerStreamWriter{Google.Cloud.PubSub.V1.StreamingPullResponse},Grpc.Core.ServerCallContext)">
             <summary>
             (EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will
             respond with UNIMPLEMENTED errors unless you have been invited to test
             this feature. Contact cloud-pubsub@google.com with any questions.
            
             Establishes a stream with the server, which sends messages down to the
             client. The client streams acknowledgements and ack deadline modifications
             back to the server. The server will close the stream and return the status
             on any error. The server may close the stream with status `OK` to reassign
             server-side resources, in which case, the client should re-establish the
             stream. `UNAVAILABLE` may also be returned in the case of a transient error
             (e.g., a server restart). These should also be retried by the client. Flow
             control can be achieved by configuring the underlying RPC channel.
             </summary>
             <param name="requestStream">Used for reading requests from the client.</param>
             <param name="responseStream">Used for sending responses back to the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.Seek(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient">
            <summary>Client for Subscriber</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for Subscriber</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Subscriber that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.CallOptions)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.CallOptions)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.CallOptions)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.CallOptions)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.CallOptions)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.CallOptions)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Pull(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Pull(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.CallOptions)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.CallOptions)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.StreamingPull(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             (EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will
             respond with UNIMPLEMENTED errors unless you have been invited to test
             this feature. Contact cloud-pubsub@google.com with any questions.
            
             Establishes a stream with the server, which sends messages down to the
             client. The client streams acknowledgements and ack deadline modifications
             back to the server. The server will close the stream and return the status
             on any error. The server may close the stream with status `OK` to reassign
             server-side resources, in which case, the client should re-establish the
             stream. `UNAVAILABLE` may also be returned in the case of a transient error
             (e.g., a server restart). These should also be retried by the client. Flow
             control can be achieved by configuring the underlying RPC channel.
             </summary>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.StreamingPull(Grpc.Core.CallOptions)">
             <summary>
             (EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will
             respond with UNIMPLEMENTED errors unless you have been invited to test
             this feature. Contact cloud-pubsub@google.com with any questions.
            
             Establishes a stream with the server, which sends messages down to the
             client. The client streams acknowledgements and ack deadline modifications
             back to the server. The server will close the stream and return the status
             on any error. The server may close the stream with status `OK` to reassign
             server-side resources, in which case, the client should re-establish the
             stream. `UNAVAILABLE` may also be returned in the case of a transient error
             (e.g., a server restart). These should also be retried by the client. Flow
             control can be achieved by configuring the underlying RPC channel.
             </summary>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.CallOptions)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.CallOptions)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.CallOptions)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.CallOptions)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Seek(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Seek(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.CallOptions)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.CallOptions)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateIAMPolicyClient">
            <summary>
            Creates a new instance of <see cref="T:Google.Cloud.Iam.V1.IAMPolicy.IAMPolicyClient"/> using the same call invoker
            as this client.
            </summary>
            <returns>A new IAM client for the same target as this client.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.BindService(Google.Cloud.PubSub.V1.Subscriber.SubscriberBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Publisher">
            <summary>
            The service that an application uses to manipulate topics, and to send
            messages to a topic.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Publisher.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Publisher.PublisherBase">
            <summary>Base class for server-side implementations of Publisher</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.CreateTopic(Google.Cloud.PubSub.V1.Topic,Grpc.Core.ServerCallContext)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.Publish(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Publisher.PublisherClient">
            <summary>Client for Publisher</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for Publisher</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Publisher that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopic(Google.Cloud.PubSub.V1.Topic,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopic(Google.Cloud.PubSub.V1.Topic,Grpc.Core.CallOptions)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Grpc.Core.CallOptions)">
            <summary>
            Creates the given topic with the given name.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.Publish(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.Publish(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.CallOptions)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.CallOptions)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist. The message payload must not be empty; it must contain
             either a non-empty data field, or at least one attribute.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the name of the subscriptions for this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateIAMPolicyClient">
            <summary>
            Creates a new instance of <see cref="T:Google.Cloud.Iam.V1.IAMPolicy.IAMPolicyClient"/> using the same call invoker
            as this client.
            </summary>
            <returns>A new IAM client for the same target as this client.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.BindService(Google.Cloud.PubSub.V1.Publisher.PublisherBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ProjectName">
            <summary>
            Resource name for the 'project' resource.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.Parse(System.String)">
            <summary>
            Parses the given project resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/> instance.
            </summary>
            <param name="projectName">The project resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.TryParse(System.String,Google.Cloud.PubSub.V1.ProjectName@)">
            <summary>
            Tries to parse the given project resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/> instance.
            </summary>
            <remarks>
            This method still throws <see cref="T:System.ArgumentNullException"/> if <paramref name="projectName"/> is null,
            as this would usually indicate a programming error rather than a data error.
            </remarks>
            <param name="projectName">The project resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/>,
            or <c>null</c> if parsing fails.</param>
            <returns><c>true</c> if the name was parsed succssfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.#ctor(System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:Google.Cloud.PubSub.V1.ProjectName"/> resource name class
            from its component parts.
            </summary>
            <param name="projectId">The project ID. Must not be <c>null</c>.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ProjectName.ProjectId">
            <summary>
            The project ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ProjectName.Kind">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.ToString">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.Equals(Google.Cloud.PubSub.V1.ProjectName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.op_Equality(Google.Cloud.PubSub.V1.ProjectName,Google.Cloud.PubSub.V1.ProjectName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ProjectName.op_Inequality(Google.Cloud.PubSub.V1.ProjectName,Google.Cloud.PubSub.V1.ProjectName)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SnapshotName">
            <summary>
            Resource name for the 'snapshot' resource.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Parse(System.String)">
            <summary>
            Parses the given snapshot resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> instance.
            </summary>
            <param name="snapshotName">The snapshot resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.TryParse(System.String,Google.Cloud.PubSub.V1.SnapshotName@)">
            <summary>
            Tries to parse the given snapshot resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> instance.
            </summary>
            <remarks>
            This method still throws <see cref="T:System.ArgumentNullException"/> if <paramref name="snapshotName"/> is null,
            as this would usually indicate a programming error rather than a data error.
            </remarks>
            <param name="snapshotName">The snapshot resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>,
            or <c>null</c> if parsing fails.</param>
            <returns><c>true</c> if the name was parsed succssfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> resource name class
            from its component parts.
            </summary>
            <param name="projectId">The project ID. Must not be <c>null</c>.</param>
            <param name="snapshotId">The snapshot ID. Must not be <c>null</c>.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.ProjectId">
            <summary>
            The project ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.SnapshotId">
            <summary>
            The snapshot ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.Kind">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.ToString">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Equals(Google.Cloud.PubSub.V1.SnapshotName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.op_Equality(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SnapshotName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.op_Inequality(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SnapshotName)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriptionName">
            <summary>
            Resource name for the 'subscription' resource.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Parse(System.String)">
            <summary>
            Parses the given subscription resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> instance.
            </summary>
            <param name="subscriptionName">The subscription resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.TryParse(System.String,Google.Cloud.PubSub.V1.SubscriptionName@)">
            <summary>
            Tries to parse the given subscription resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> instance.
            </summary>
            <remarks>
            This method still throws <see cref="T:System.ArgumentNullException"/> if <paramref name="subscriptionName"/> is null,
            as this would usually indicate a programming error rather than a data error.
            </remarks>
            <param name="subscriptionName">The subscription resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>,
            or <c>null</c> if parsing fails.</param>
            <returns><c>true</c> if the name was parsed succssfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> resource name class
            from its component parts.
            </summary>
            <param name="projectId">The project ID. Must not be <c>null</c>.</param>
            <param name="subscriptionId">The subscription ID. Must not be <c>null</c>.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.ProjectId">
            <summary>
            The project ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.SubscriptionId">
            <summary>
            The subscription ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.Kind">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.ToString">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Equals(Google.Cloud.PubSub.V1.SubscriptionName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.op_Equality(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.SubscriptionName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.op_Inequality(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.SubscriptionName)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.TopicName">
            <summary>
            Resource name for the 'topic' resource.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Parse(System.String)">
            <summary>
            Parses the given topic resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> instance.
            </summary>
            <param name="topicName">The topic resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.TryParse(System.String,Google.Cloud.PubSub.V1.TopicName@)">
            <summary>
            Tries to parse the given topic resource name in string form into a new
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> instance.
            </summary>
            <remarks>
            This method still throws <see cref="T:System.ArgumentNullException"/> if <paramref name="topicName"/> is null,
            as this would usually indicate a programming error rather than a data error.
            </remarks>
            <param name="topicName">The topic resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>,
            or <c>null</c> if parsing fails.</param>
            <returns><c>true</c> if the name was parsed succssfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> resource name class
            from its component parts.
            </summary>
            <param name="projectId">The project ID. Must not be <c>null</c>.</param>
            <param name="topicId">The topic ID. Must not be <c>null</c>.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.ProjectId">
            <summary>
            The project ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.TopicId">
            <summary>
            The topic ID. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.Kind">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.ToString">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Equals(Google.Cloud.PubSub.V1.TopicName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.op_Equality(Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.TopicName)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.op_Inequality(Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.TopicName)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.TopicNameOneof">
            <summary>
            Resource name which will contain one of a choice of resource names.
            </summary>
            <remarks>
            This resource name will contain one of the following:
            <list type="bullet">
            <item><description>TopicName: A resource of type 'topic'.</description></item>
            <item><description>DeletedTopicNameFixed: A resource of type 'deleted_topic'.</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.TopicNameOneof.OneofType">
            <summary>
            The possible contents of <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.TopicNameOneof.OneofType.Unknown">
            <summary>
            A resource of an unknown type.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.TopicNameOneof.OneofType.TopicName">
            <summary>
            A resource of type 'topic'.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.TopicNameOneof.OneofType.DeletedTopicNameFixed">
            <summary>
            A resource of type 'deleted_topic'.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.Parse(System.String,System.Boolean)">
            <summary>
            Parses a resource name in string form into a new <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/> instance.
            </summary>
            <remarks>
            To parse successfully the resource name must be one of the following:
            <list type="bullet">
            <item><description>TopicName: A resource of type 'topic'.</description></item>
            <item><description>DeletedTopicNameFixed: A resource of type 'deleted_topic'.</description></item>
            </list>
            Or an <see cref="T:Google.Api.Gax.UnknownResourceName"/> if <paramref name="allowUnknown"/> is <c>true</c>.
            </remarks>
            <param name="name">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnknown">If true, will successfully parse an unknown resource name
            into an <see cref="T:Google.Api.Gax.UnknownResourceName"/>; otherwise will throw an
            <see cref="T:System.ArgumentException"/> if an unknown resource name is given.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.TryParse(System.String,System.Boolean,Google.Cloud.PubSub.V1.TopicNameOneof@)">
            <summary>
            Tries to parse a resource name in string form into a new <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/> instance.
            </summary>
            <remarks>
            To parse successfully the resource name must be one of the following:
            <list type="bullet">
            <item><description>TopicName: A resource of type 'topic'.</description></item>
            <item><description>DeletedTopicNameFixed: A resource of type 'deleted_topic'.</description></item>
            </list>
            Or an <see cref="T:Google.Api.Gax.UnknownResourceName"/> if <paramref name="allowUnknown"/> is <c>true</c>.
            </remarks>
            <param name="name">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnknown">If true, will successfully parse an unknown resource name
            into an <see cref="T:Google.Api.Gax.UnknownResourceName"/>.</param>
            <param name="result">When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>,
            or <c>null</c> if parsing fails.</param>
            <returns><c>true</c> if the name was parsed succssfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.From(Google.Cloud.PubSub.V1.TopicName)">
            <summary>
            Construct a new instance of <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/> from the provided <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.TopicName"/>
            </summary>
            <param name="topicName">The <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.TopicName"/> to be contained within
            the returned <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>. Must not be <c>null</c>.</param>
            <returns>A new <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>, containing <paramref name="topicName"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.From(Google.Cloud.PubSub.V1.DeletedTopicNameFixed)">
            <summary>
            Construct a new instance of <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/> from the provided <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.DeletedTopicNameFixed"/>
            </summary>
            <param name="deletedTopicNameFixed">The <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.DeletedTopicNameFixed"/> to be contained within
            the returned <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>. Must not be <c>null</c>.</param>
            <returns>A new <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/>, containing <paramref name="deletedTopicNameFixed"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.#ctor(Google.Cloud.PubSub.V1.TopicNameOneof.OneofType,Google.Api.Gax.IResourceName)">
            <summary>
            Constructs a new instance of the <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof"/> resource name class
            from a suitable <see cref="T:Google.Api.Gax.IResourceName"/> instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicNameOneof.Type">
            <summary>
            The <see cref="T:Google.Cloud.PubSub.V1.TopicNameOneof.OneofType"/> of the Name contained in this instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicNameOneof.Name">
            <summary>
            The <see cref="T:Google.Api.Gax.IResourceName"/> contained in this instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicNameOneof.TopicName">
            <summary>
            Get the contained <see cref="T:Google.Api.Gax.IResourceName"/> as <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.TopicName"/>.
            </summary>
            <remarks>
            An <see cref="T:System.InvalidOperationException"/> will be thrown if this does not
            contain an instance of <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.TopicName"/>.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicNameOneof.DeletedTopicNameFixed">
            <summary>
            Get the contained <see cref="T:Google.Api.Gax.IResourceName"/> as <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.DeletedTopicNameFixed"/>.
            </summary>
            <remarks>
            An <see cref="T:System.InvalidOperationException"/> will be thrown if this does not
            contain an instance of <see cref="P:Google.Cloud.PubSub.V1.TopicNameOneof.DeletedTopicNameFixed"/>.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicNameOneof.Kind">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.ToString">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.Equals(Google.Cloud.PubSub.V1.TopicNameOneof)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.op_Equality(Google.Cloud.PubSub.V1.TopicNameOneof,Google.Cloud.PubSub.V1.TopicNameOneof)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicNameOneof.op_Inequality(Google.Cloud.PubSub.V1.TopicNameOneof,Google.Cloud.PubSub.V1.TopicNameOneof)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeletedTopicNameFixed">
            <summary>
            Resource name to represent the fixed string "_deleted-topic_".
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.FixedValue">
            <summary>
            The fixed string value: "_deleted-topic_".
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.Instance">
            <summary>
            An instance of <see cref="T:Google.Cloud.PubSub.V1.DeletedTopicNameFixed"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.Parse(System.String)">
            <summary>
            Parses the given string into a new <see cref="T:Google.Cloud.PubSub.V1.DeletedTopicNameFixed"/> instance.
            Only succeeds if the string is equal to "_deleted-topic_".
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.TryParse(System.String,Google.Cloud.PubSub.V1.DeletedTopicNameFixed@)">
            <summary>
            Tries to parse the given string into a new <see cref="T:Google.Cloud.PubSub.V1.DeletedTopicNameFixed"/> instance.
            Only succeeds if the string is equal to "_deleted-topic_".
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.Kind">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.ToString">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.Equals(Google.Cloud.PubSub.V1.DeletedTopicNameFixed)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.op_Equality(Google.Cloud.PubSub.V1.DeletedTopicNameFixed,Google.Cloud.PubSub.V1.DeletedTopicNameFixed)">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.DeletedTopicNameFixed.op_Inequality(Google.Cloud.PubSub.V1.DeletedTopicNameFixed,Google.Cloud.PubSub.V1.DeletedTopicNameFixed)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberSettings">
            <summary>
            Settings for a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.GetDefault">
            <summary>
            Get a new instance of the default <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/>.
            </summary>
            <returns>
            A new instance of the default <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.#ctor">
            <summary>
            Constructs a new <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/> object with default settings.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.IdempotentRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "Idempotent" <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "Idempotent" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.NonIdempotentRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "NonIdempotent" <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "NonIdempotent" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.PullRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "Pull" <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "Pull" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.Cancelled"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Internal"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.GetDefaultRetryBackoff">
            <summary>
            "Default" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <returns>
            The "Default" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </returns>
            <remarks>
            The "Default" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial delay: 100 milliseconds</description></item>
            <item><description>Maximum delay: 60000 milliseconds</description></item>
            <item><description>Delay multiplier: 1.3</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.GetDefaultTimeoutBackoff">
            <summary>
            "Default" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <returns>
            The "Default" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </returns>
            <remarks>
            The "Default" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Maximum timeout: 60000 milliseconds</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.GetMessagingRetryBackoff">
            <summary>
            "Messaging" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <returns>
            The "Messaging" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </returns>
            <remarks>
            The "Messaging" retry backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial delay: 100 milliseconds</description></item>
            <item><description>Maximum delay: 60000 milliseconds</description></item>
            <item><description>Delay multiplier: 1.3</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.GetMessagingTimeoutBackoff">
            <summary>
            "Messaging" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </summary>
            <returns>
            The "Messaging" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods.
            </returns>
            <remarks>
            The "Messaging" timeout backoff for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial timeout: 12000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Maximum timeout: 12000 milliseconds</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.CreateSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.CreateSubscription</c> and <c>SubscriberClient.CreateSubscriptionAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.CreateSubscription</c> and
            <c>SubscriberClient.CreateSubscriptionAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.GetSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.GetSubscription</c> and <c>SubscriberClient.GetSubscriptionAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.GetSubscription</c> and
            <c>SubscriberClient.GetSubscriptionAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.UpdateSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.UpdateSubscription</c> and <c>SubscriberClient.UpdateSubscriptionAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.UpdateSubscription</c> and
            <c>SubscriberClient.UpdateSubscriptionAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.ListSubscriptionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.ListSubscriptions</c> and <c>SubscriberClient.ListSubscriptionsAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.ListSubscriptions</c> and
            <c>SubscriberClient.ListSubscriptionsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.DeleteSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.DeleteSubscription</c> and <c>SubscriberClient.DeleteSubscriptionAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.DeleteSubscription</c> and
            <c>SubscriberClient.DeleteSubscriptionAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.ModifyAckDeadlineSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.ModifyAckDeadline</c> and <c>SubscriberClient.ModifyAckDeadlineAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.ModifyAckDeadline</c> and
            <c>SubscriberClient.ModifyAckDeadlineAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.AcknowledgeSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.Acknowledge</c> and <c>SubscriberClient.AcknowledgeAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.Acknowledge</c> and
            <c>SubscriberClient.AcknowledgeAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 12000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 12000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.PullSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.Pull</c> and <c>SubscriberClient.PullAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.Pull</c> and
            <c>SubscriberClient.PullAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 12000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 12000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Cancelled"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Internal"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.StreamingPullSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for calls to <c>SubscriberClient.StreamingPull</c>.
            </summary>
            <remarks>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.StreamingPullStreamingSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.BidirectionalStreamingSettings"/> for calls to
            <c>SubscriberClient.StreamingPull</c>.
            </summary>
            <remarks>
            The default local send queue size is 100.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.ModifyPushConfigSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.ModifyPushConfig</c> and <c>SubscriberClient.ModifyPushConfigAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.ModifyPushConfig</c> and
            <c>SubscriberClient.ModifyPushConfigAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.ListSnapshotsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.ListSnapshots</c> and <c>SubscriberClient.ListSnapshotsAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.ListSnapshots</c> and
            <c>SubscriberClient.ListSnapshotsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.CreateSnapshotSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.CreateSnapshot</c> and <c>SubscriberClient.CreateSnapshotAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.CreateSnapshot</c> and
            <c>SubscriberClient.CreateSnapshotAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.DeleteSnapshotSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.DeleteSnapshot</c> and <c>SubscriberClient.DeleteSnapshotAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.DeleteSnapshot</c> and
            <c>SubscriberClient.DeleteSnapshotAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.SeekSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.Seek</c> and <c>SubscriberClient.SeekAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.Seek</c> and
            <c>SubscriberClient.SeekAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.SetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.SetIamPolicy</c> and <c>SubscriberClient.SetIamPolicyAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.SetIamPolicy</c> and
            <c>SubscriberClient.SetIamPolicyAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.GetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.GetIamPolicy</c> and <c>SubscriberClient.GetIamPolicyAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.GetIamPolicy</c> and
            <c>SubscriberClient.GetIamPolicyAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberSettings.TestIamPermissionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberClient.TestIamPermissions</c> and <c>SubscriberClient.TestIamPermissionsAsync</c>.
            </summary>
            <remarks>
            The default <c>SubscriberClient.TestIamPermissions</c> and
            <c>SubscriberClient.TestIamPermissionsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberSettings.Clone">
            <summary>
            Creates a deep clone of this object, with all the same property values.
            </summary>
            <returns>A deep clone of this <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/> object.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClient">
            <summary>
            Subscriber client wrapper, for convenient use.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultEndpoint">
            <summary>
            The default endpoint for the Subscriber service, which is a host of "pubsub.googleapis.com" and a port of 443.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultScopes">
            <summary>
            The default Subscriber scopes.
            </summary>
            <remarks>
            The default Subscriber scopes are:
            <list type="bullet">
            <item><description>"https://www.googleapis.com/auth/cloud-platform"</description></item>
            <item><description>"https://www.googleapis.com/auth/pubsub"</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.SubscriberSettings)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>, applying defaults for all unspecified settings,
            and creating a channel connecting to the given endpoint with application default credentials where
            necessary.
            </summary>
            <param name="endpoint">Optional <see cref="T:Google.Api.Gax.Grpc.ServiceEndpoint"/>.</param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/>.</param>
            <returns>The task representing the created <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.SubscriberSettings)">
            <summary>
            Synchronously creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>, applying defaults for all unspecified settings,
            and creating a channel connecting to the given endpoint with application default credentials where
            necessary.
            </summary>
            <param name="endpoint">Optional <see cref="T:Google.Api.Gax.Grpc.ServiceEndpoint"/>.</param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Create(Grpc.Core.Channel,Google.Cloud.PubSub.V1.SubscriberSettings)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> which uses the specified channel for remote operations.
            </summary>
            <param name="channel">The <see cref="T:Grpc.Core.Channel"/> for remote operations. Must not be null.</param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.SubscriberSettings)"/>
            and <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.SubscriberSettings)"/>. Channels which weren't automatically
            created are not affected.
            </summary>
            <remarks>After calling this method, further calls to <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.SubscriberSettings)"/>
            and <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Cloud.PubSub.V1.SubscriberSettings)"/> will create new channels, which could
            in turn be shut down by another call to this method.</remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.GrpcClient">
            <summary>
            The underlying gRPC Subscriber client.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PushConfig,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="name">
             The name of the subscription. It must have the format
             `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
             start with a letter, and contain only letters (`[A-Za-z]`), numbers
             (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
             plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
             in length, and it must not start with `"goog"`.
             </param>
             <param name="topic">
             The name of the topic from which this subscription is receiving messages.
             Format is `projects/{project}/topics/{topic}`.
             The value of this field will be `_deleted-topic_` if the topic has been
             deleted.
             </param>
             <param name="pushConfig">
             If push delivery is used with this subscription, this field is
             used to configure it. An empty `pushConfig` signifies that the subscriber
             will pull and ack messages using API methods.
             </param>
             <param name="ackDeadlineSeconds">
             This value is the maximum time after a subscriber receives a message
             before the subscriber should acknowledge the message. After message
             delivery but before the ack deadline expires and before the message is
             acknowledged, it is an outstanding message and will not be delivered
             again during that time (on a best-effort basis).
            
             For pull subscriptions, this value is used as the initial value for the ack
             deadline. To override this value for a given message, call
             `ModifyAckDeadline` with the corresponding `ack_id` if using
             pull.
             The minimum custom deadline you can specify is 10 seconds.
             The maximum custom deadline you can specify is 600 seconds (10 minutes).
             If this parameter is 0, a default value of 10 seconds is used.
            
             For push delivery, this value is also used to set the request timeout for
             the call to the push endpoint.
            
             If the subscriber never acknowledges the message, the Pub/Sub
             system will eventually redeliver the message.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PushConfig,System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="name">
             The name of the subscription. It must have the format
             `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
             start with a letter, and contain only letters (`[A-Za-z]`), numbers
             (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
             plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
             in length, and it must not start with `"goog"`.
             </param>
             <param name="topic">
             The name of the topic from which this subscription is receiving messages.
             Format is `projects/{project}/topics/{topic}`.
             The value of this field will be `_deleted-topic_` if the topic has been
             deleted.
             </param>
             <param name="pushConfig">
             If push delivery is used with this subscription, this field is
             used to configure it. An empty `pushConfig` signifies that the subscriber
             will pull and ack messages using API methods.
             </param>
             <param name="ackDeadlineSeconds">
             This value is the maximum time after a subscriber receives a message
             before the subscriber should acknowledge the message. After message
             delivery but before the ack deadline expires and before the message is
             acknowledged, it is an outstanding message and will not be delivered
             again during that time (on a best-effort basis).
            
             For pull subscriptions, this value is used as the initial value for the ack
             deadline. To override this value for a given message, call
             `ModifyAckDeadline` with the corresponding `ack_id` if using
             pull.
             The minimum custom deadline you can specify is 10 seconds.
             The maximum custom deadline you can specify is 600 seconds (10 minutes).
             If this parameter is 0, a default value of 10 seconds is used.
            
             For push delivery, this value is also used to set the request timeout for
             the call to the push endpoint.
            
             If the subscriber never acknowledges the message, the Pub/Sub
             system will eventually redeliver the message.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSubscription(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PushConfig,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="name">
             The name of the subscription. It must have the format
             `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
             start with a letter, and contain only letters (`[A-Za-z]`), numbers
             (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
             plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
             in length, and it must not start with `"goog"`.
             </param>
             <param name="topic">
             The name of the topic from which this subscription is receiving messages.
             Format is `projects/{project}/topics/{topic}`.
             The value of this field will be `_deleted-topic_` if the topic has been
             deleted.
             </param>
             <param name="pushConfig">
             If push delivery is used with this subscription, this field is
             used to configure it. An empty `pushConfig` signifies that the subscriber
             will pull and ack messages using API methods.
             </param>
             <param name="ackDeadlineSeconds">
             This value is the maximum time after a subscriber receives a message
             before the subscriber should acknowledge the message. After message
             delivery but before the ack deadline expires and before the message is
             acknowledged, it is an outstanding message and will not be delivered
             again during that time (on a best-effort basis).
            
             For pull subscriptions, this value is used as the initial value for the ack
             deadline. To override this value for a given message, call
             `ModifyAckDeadline` with the corresponding `ack_id` if using
             pull.
             The minimum custom deadline you can specify is 10 seconds.
             The maximum custom deadline you can specify is 600 seconds (10 minutes).
             If this parameter is 0, a default value of 10 seconds is used.
            
             For push delivery, this value is also used to set the request timeout for
             the call to the push endpoint.
            
             If the subscriber never acknowledges the message, the Pub/Sub
             system will eventually redeliver the message.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetSubscription(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="project">
            The name of the cloud project that subscriptions belong to.
            Format is `projects/{project}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSubscriptions(Google.Cloud.PubSub.V1.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="project">
            The name of the cloud project that subscriptions belong to.
            Format is `projects/{project}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSubscription(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero may immediately make the message available for
            another pull request.
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero may immediately make the message available for
            another pull request.
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero may immediately make the message available for
            another pull request.
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="subscription">
             The subscription whose message is being acknowledged.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="ackIds">
             The acknowledgment ID for the messages being acknowledged that was returned
             by the Pub/Sub system in the `Pull` response. Must not be empty.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="subscription">
             The subscription whose message is being acknowledged.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="ackIds">
             The acknowledgment ID for the messages being acknowledged that was returned
             by the Pub/Sub system in the `Pull` response. Must not be empty.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Acknowledge(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="subscription">
             The subscription whose message is being acknowledged.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="ackIds">
             The acknowledgment ID for the messages being acknowledged that was returned
             by the Pub/Sub system in the `Pull` response. Must not be empty.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Nullable{System.Boolean},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages. The
            client may cancel the request if it does not wish to wait any longer for
            the response.
            </param>
            <param name="maxMessages">
            The maximum number of messages returned for this request. The Pub/Sub
            system may return fewer than the number specified.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages. The
            client may cancel the request if it does not wish to wait any longer for
            the response.
            </param>
            <param name="maxMessages">
            The maximum number of messages returned for this request. The Pub/Sub
            system may return fewer than the number specified.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Pull(Google.Cloud.PubSub.V1.SubscriptionName,System.Nullable{System.Boolean},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages. The
            client may cancel the request if it does not wish to wait any longer for
            the response.
            </param>
            <param name="maxMessages">
            The maximum number of messages returned for this request. The Pub/Sub
            system may return fewer than the number specified.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Pull(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.StreamingPull(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
             <summary>
             (EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will
             respond with UNIMPLEMENTED errors unless you have been invited to test
             this feature. Contact cloud-pubsub@google.com with any questions.
            
             Establishes a stream with the server, which sends messages down to the
             client. The client streams acknowledgements and ack deadline modifications
             back to the server. The server will close the stream and return the status
             on any error. The server may close the stream with status `OK` to reassign
             server-side resources, in which case, the client should re-establish the
             stream. `UNAVAILABLE` may also be returned in the case of a transient error
             (e.g., a server restart). These should also be retried by the client. Flow
             control can be achieved by configuring the underlying RPC channel.
             </summary>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <param name="streamingSettings">
             If not null, applies streaming overrides to this RPC call.
             </param>
             <returns>
             The client-server stream.
             </returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClient.StreamingPullStream">
            <summary>
            Bidirectional streaming methods for <c>StreamingPull</c>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.PushConfig,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="subscription">
             The name of the subscription.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="pushConfig">
             The push configuration for future deliveries.
            
             An empty `pushConfig` indicates that the Pub/Sub system should
             stop pushing messages from the given subscription and allow
             messages to be pulled and acknowledged - effectively pausing
             the subscription if `Pull` is not called.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.PushConfig,System.Threading.CancellationToken)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="subscription">
             The name of the subscription.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="pushConfig">
             The push configuration for future deliveries.
            
             An empty `pushConfig` indicates that the Pub/Sub system should
             stop pushing messages from the given subscription and allow
             messages to be pulled and acknowledged - effectively pausing
             the subscription if `Pull` is not called.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyPushConfig(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.PushConfig,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="subscription">
             The name of the subscription.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="pushConfig">
             The push configuration for future deliveries.
            
             An empty `pushConfig` indicates that the Pub/Sub system should
             stop pushing messages from the given subscription and allow
             messages to be pulled and acknowledged - effectively pausing
             the subscription if `Pull` is not called.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="project">
            The name of the cloud project that snapshots belong to.
            Format is `projects/{project}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSnapshots(Google.Cloud.PubSub.V1.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="project">
            The name of the cloud project that snapshots belong to.
            Format is `projects/{project}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request.
            A value of <c>null</c> or an empty string retrieves the first page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller.
            A value of <c>null</c> or 0 uses a server-defined page size.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="name">
             Optional user-provided name for this snapshot.
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription.
             Note that for REST API requests, you must specify a name.
             Format is `projects/{project}/snapshots/{snap}`.
             </param>
             <param name="subscription">
             The subscription whose backlog the snapshot retains.
             Specifically, the created snapshot is guaranteed to retain:
              (a) The existing backlog on the subscription. More precisely, this is
                  defined as the messages in the subscription's backlog that are
                  unacknowledged upon the successful completion of the
                  `CreateSnapshot` request; as well as:
              (b) Any messages published to the subscription's topic following the
                  successful completion of the CreateSnapshot request.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SubscriptionName,System.Threading.CancellationToken)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="name">
             Optional user-provided name for this snapshot.
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription.
             Note that for REST API requests, you must specify a name.
             Format is `projects/{project}/snapshots/{snap}`.
             </param>
             <param name="subscription">
             The subscription whose backlog the snapshot retains.
             Specifically, the created snapshot is guaranteed to retain:
              (a) The existing backlog on the subscription. More precisely, this is
                  defined as the messages in the subscription's backlog that are
                  unacknowledged upon the successful completion of the
                  `CreateSnapshot` request; as well as:
              (b) Any messages published to the subscription's topic following the
                  successful completion of the CreateSnapshot request.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSnapshot(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="name">
             Optional user-provided name for this snapshot.
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription.
             Note that for REST API requests, you must specify a name.
             Format is `projects/{project}/snapshots/{snap}`.
             </param>
             <param name="subscription">
             The subscription whose backlog the snapshot retains.
             Specifically, the created snapshot is guaranteed to retain:
              (a) The existing backlog on the subscription. More precisely, this is
                  defined as the messages in the subscription's backlog that are
                  unacknowledged upon the successful completion of the
                  `CreateSnapshot` request; as well as:
              (b) Any messages published to the subscription's topic following the
                  successful completion of the CreateSnapshot request.
             Format is `projects/{project}/subscriptions/{sub}`.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSnapshot(Google.Cloud.PubSub.V1.SnapshotName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Seek(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="policy">
            REQUIRED: The complete policy to be applied to the `resource`. The size of
            the policy is limited to a few 10s of KB. An empty policy is a
            valid policy but certain Cloud Platform services (such as Projects)
            might reject them.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,System.Threading.CancellationToken)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="policy">
            REQUIRED: The complete policy to be applied to the `resource`. The size of
            the policy is limited to a few 10s of KB. An empty policy is a
            valid policy but certain Cloud Platform services (such as Projects)
            might reject them.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.SetIamPolicy(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="policy">
            REQUIRED: The complete policy to be applied to the `resource`. The size of
            the policy is limited to a few 10s of KB. An empty policy is a
            valid policy but certain Cloud Platform services (such as Projects)
            might reject them.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetIamPolicyAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetIamPolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetIamPolicy(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy detail is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="permissions">
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy detail is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="permissions">
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.TestIamPermissions(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy detail is being requested.
            `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.
            </param>
            <param name="permissions">
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClientImpl">
            <summary>
            Subscriber client wrapper implementation, for convenient use.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.#ctor(Google.Cloud.PubSub.V1.Subscriber.SubscriberClient,Google.Cloud.PubSub.V1.SubscriberSettings)">
            <summary>
            Constructs a client wrapper for the Subscriber service, with the specified gRPC client and settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Cloud.PubSub.V1.SubscriberSettings"/> used within this client </param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClientImpl.GrpcClient">
            <summary>
            The underlying gRPC Subscriber client.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a subscription to a given topic.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Subscription object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.Pull(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. Returns an empty list if there are no
            messages available in the backlog. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPull(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
             <summary>
             (EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will
             respond with UNIMPLEMENTED errors unless you have been invited to test
             this feature. Contact cloud-pubsub@google.com with any questions.
            
             Establishes a stream with the server, which sends messages down to the
             client. The client streams acknowledgements and ack deadline modifications
             back to the server. The server will close the stream and return the status
             on any error. The server may close the stream with status `OK` to reassign
             server-side resources, in which case, the client should re-establish the
             stream. `UNAVAILABLE` may also be returned in the case of a transient error
             (e.g., a server restart). These should also be retried by the client. Flow
             control can be achieved by configuring the underlying RPC channel.
             </summary>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <param name="streamingSettings">
             If not null, applies streaming overrides to this RPC call.
             </param>
             <returns>
             The client-server stream.
             </returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl">
            <summary>
            Bidirectional streaming methods for <c>StreamingPull</c>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.#ctor(Google.Cloud.PubSub.V1.SubscriberClientImpl,Grpc.Core.AsyncDuplexStreamingCall{Google.Cloud.PubSub.V1.StreamingPullRequest,Google.Cloud.PubSub.V1.StreamingPullResponse},Google.Api.Gax.Grpc.BufferedClientStreamWriter{Google.Cloud.PubSub.V1.StreamingPullRequest})">
            <summary>
            Construct the bidirectional streaming method for <c>StreamingPull</c>.
            </summary>
            <param name="service">The service containing this streaming method.</param>
            <param name="call">The underlying gRPC duplex streaming call.</param>
            <param name="writeBuffer">The <see cref="T:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1"/>
            instance associated with this streaming call.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.GrpcCall">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.TryWriteAsync(Google.Cloud.PubSub.V1.StreamingPullRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.WriteAsync(Google.Cloud.PubSub.V1.StreamingPullRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.TryWriteAsync(Google.Cloud.PubSub.V1.StreamingPullRequest,Grpc.Core.WriteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.WriteAsync(Google.Cloud.PubSub.V1.StreamingPullRequest,Grpc.Core.WriteOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.TryWriteCompleteAsync">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.WriteCompleteAsync">
            <inheritdoc/>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClientImpl.StreamingPullStreamImpl.ResponseStream">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Creates a snapshot from the requested subscription.
             If the snapshot already exists, returns `ALREADY_EXISTS`.
             If the requested subscription doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this snapshot on the same project as the subscription, conforming
             to the
             [resource name format](https://cloud.google.com/pubsub/docs/overview#names).
             The generated name is populated in the returned Snapshot object.
             Note that for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. All messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.Seek(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Sets the access control policy on the specified resource. Replaces any
            existing policy.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource.
            Returns an empty policy if the resource exists and does not have a policy
            set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns permissions that a caller has on the specified resource.
            If the resource does not exist, this will return an empty set of
            permissions, not a NOT_FOUND error.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
    </members>
</doc>
